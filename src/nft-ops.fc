cell calculate_nft_item_state_init(int item_index, cell nft_item_code, slice my_address) {
  cell data = begin_cell().store_uint(item_index, 64).store_slice(my_address).end_cell();
  return begin_cell().store_uint(0, 2).store_dict(nft_item_code).store_dict(data).store_uint(0, 1).end_cell();
}

slice calculate_nft_item_address(int wc, cell state_init) {
  return begin_cell().store_uint(4, 3)
                     .store_int(wc, 8)
                     .store_uint(cell_hash(state_init), 256)
                     .end_cell()
                     .begin_parse();
}

slice calculate_nft_item_address_init(int index, cell nft_item_code, slice my_address) method_id {
  var sbt_item_init = calculate_nft_item_state_init(index, nft_item_code, my_address);
  return calculate_nft_item_address(workchain(), sbt_item_init);
}
